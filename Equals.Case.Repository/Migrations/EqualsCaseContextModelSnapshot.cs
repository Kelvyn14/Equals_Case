// <auto-generated />
using System;
using Equals.Case.Repository;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Equals.Case.Repository.Migrations
{
    [DbContext(typeof(EqualsCaseContext))]
    partial class EqualsCaseContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.6-servicing-10079");

            modelBuilder.Entity("Equals.Case.Domain.Model.Adquirente", b =>
                {
                    b.Property<int>("AdquirenteId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Nome");

                    b.Property<int>("PeriodicidadeId");

                    b.HasKey("AdquirenteId");

                    b.ToTable("Adquirentes");
                });

            modelBuilder.Entity("Equals.Case.Domain.Model.Arquivo", b =>
                {
                    b.Property<int?>("ArquivoId")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("AdquirenteId");

                    b.Property<string>("ArquivoBackupPath");

                    b.Property<string>("ArquivoLocalPath");

                    b.Property<string>("Conteudo");

                    b.Property<DateTime>("DataPrevisaoRecebimento");

                    b.Property<DateTime?>("DataRecebimento");

                    b.Property<string>("Nome");

                    b.Property<bool>("Recebido");

                    b.HasKey("ArquivoId");

                    b.HasIndex("AdquirenteId");

                    b.ToTable("Arquivos");
                });

            modelBuilder.Entity("Equals.Case.Domain.Model.Periodicidade", b =>
                {
                    b.Property<int>("PeriodicidadeId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Periodo");

                    b.HasKey("PeriodicidadeId");

                    b.ToTable("Periodicidades");
                });

            modelBuilder.Entity("Equals.Case.Domain.Model.Arquivo", b =>
                {
                    b.HasOne("Equals.Case.Domain.Model.Adquirente")
                        .WithMany("Arquivos")
                        .HasForeignKey("AdquirenteId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
